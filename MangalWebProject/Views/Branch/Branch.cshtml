@model MangalWebProject.Models.BranchViewModel
@{
    ViewBag.Title = "ShowBranch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css" />

@using (Ajax.BeginForm("CreateEdit", "Branch", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID, new { @id = "ItemID" })

    <header id="topbar" class="affix">
        <div class="col-md-5 col-sm-4 col-xs-12">
            <div class="topbar-left">
                <h4>Branch Master</h4>
            </div><!--end of topbar-left-->
        </div><!--end of col-md-5-->
        <div class="col-md-7 col-sm-8 col-xs-12">
            <div class="topbar-right" id="headerbutton">
                <button href="#editModal" id="btn_edit" onclick="return ShowEditTableList();" type="button" class="@TempData["btn_editclass"]" data-toggle="modal"><span class="fa fa-pencil pr5"></span> <span class="hidden-xs">Edit</span></button>
                <button type="submit" id="btn_save" class="@TempData["btn_saveclass"]"><span class="fa fa-save pr5"></span> <span class="hidden-xs">Save</span></button>
                <button type="button" id="btnDelete" class="@TempData["btn_deleteclass"]"><span class="fa fa-trash pr5"></span> <span class="hidden-xs">Delete</span></button>
                <button href="#viewModal" id="btn_view" onclick="return ShowViewTableList();" class="@TempData["btn_viewclass"]"
                        type="button" data-toggle="modal">
                    <span class="fa fa-eye pr5"></span> <span class="hidden-xs">View</span>
                </button>
                <a href="@Html.Raw(@Url.Action("Branch", "Branch"))" type="button" data-toggle="modal" class="btn btn-alert btn-md light fw600 ml10"><span class="fa fa-close pr5"></span><span class="hidden-xs">Cancel</span></a>
            </div><!--end of topbar-right-->

        </div><!--end of col-md-7-->
    </header>

    <section id="content" class="animated fadeIn">
        <!-- Start: Topbar -->
        <!-- End: Topbar -->
        <!-- Begin: Content -->
        <!-- Dashboard Tiles -->
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel1 panel-primary">
                    <div class="admin-form">
                        <div class="panel-body">
                            <div class="section row mbn">
                                <div class="form-horizontal">
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Branch Name<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                <span class="text-danger" id="CustomErr"> </span>
                                                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Branch Name", @maxlength = "20" } })
                                                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Branch Code<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Branch Code", @maxlength = "20" } })
                                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Branch Type<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                <div class="section">
                                                    <label class="field select">
                                                        @{
                                                            var branchTypeList = new SelectList(new[]
                                                            {
                                                                new SelectListItem { Text = "Select Branch Type"},
                                                                new SelectListItem { Text = "Rented", Value = "1"},
                                                                new SelectListItem { Text = "Ownership", Value = "2"},
                                                                    }, "Value", "Text");
                                                        }
                                                        @Html.DropDownListFor(m => m.BranchType, branchTypeList)
                                                        <span class="text-danger">@Html.ValidationMessageFor(m => m.BranchType)</span>
                                                        <i class="arrow"></i>
                                                    </label>
                                                </div>
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Date w.e.f<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.DateWEF, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date w.e.f", @autocomplete = "Off" } })
                                                <span class="text-danger">@Html.ValidationMessageFor(m => m.DateWEF)</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12" style="margin-top: 10px;">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Date on Inception<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.DateInception, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date on Inception/Renewed", @autocomplete = "Off" } })
                                                <span class="text-danger">@Html.ValidationMessageFor(m => m.DateInception)</span>
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label" id="lblRent">Rent Period Agreed<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.RentPeriodAgreed, new { htmlAttributes = new { @class = "form-control", @placeholder = "Rent period agreed untill", @autocomplete = "Off" } })
                                                <span class="text-danger">@Html.ValidationMessageFor(m => m.RentPeriodAgreed)</span>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Address<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @placeholder = "Address", @maxlength = "100", @cols = "2", @rows = "2" })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Pincode<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                <div class="section">
                                                    <label class="field select">
                                                        @Html.DropDownListFor(m => m.Pincode, (SelectList)ViewBag.PincodeList, "--Select Pincode--", htmlAttributes: new { @class = "form-control" })
                                                        <span class="text-danger small">@Html.ValidationMessageFor(m => m.Pincode)</span>
                                                        <i class="arrow"></i>
                                                    </label>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12" style="margin-top:10px;">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Area</label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.AreaName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Area Name", @disabled = "disabled" } })
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Zone</label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.ZoneName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zone Name", @disabled = "disabled" } })
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">City</label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control", @placeholder = "City Name", @disabled = "disabled" } })
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">State</label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.StateName, new { htmlAttributes = new { @class = "form-control", @placeholder = "State Name", @disabled = "disabled" } })
                                            </div>

                                        </div>
                                        <br />
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Contact Person<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact Person", @maxlength = "50" } })
                                                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Contact Mobile No<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact Mobile No", @onkeypress = "return event.charCode >= 48 && event.charCode <= 57", @maxlength = "10" } })
                                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <br />
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Status<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                <div class="section">
                                                    <label class="field select">
                                                        @{
                                                            var statuslist = new SelectList(new[]
                                                            {
                                                                    new SelectListItem { Text = "Select Status"},
                                                                    new SelectListItem { Text = "Active", Value = "1"},
                                                                    new SelectListItem { Text = "Inactive", Value = "2"},
                                                                    }, "Value", "Text");
                                                        }
                                                        @Html.DropDownListFor(m => m.Status, statuslist)
                                                        <span class="text-danger">@Html.ValidationMessageFor(m => m.Status)</span>
                                                        <i class="arrow"></i>
                                                    </label>
                                                </div>
                                            </div>
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">In Time<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.TextBoxFor(model => model.InTime, new { @class = "form-control", @placeholder = "In Time", @autocomplete = "Off" })
                                                @Html.ValidationMessageFor(model => model.InTime, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label class="col-lg-2 col-md-2 col-sm-3 col-xs-12 control-label">Out Time<span class="text-danger"> * </span></label>
                                            <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12">
                                                @Html.TextBoxFor(model => model.OutTime, new { @class = "form-control", @placeholder = "Out Time", @autocomplete = "Off" })
                                                @Html.ValidationMessageFor(model => model.OutTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <small style="float:right"><span class="text-danger">* </span>indicates compulsary fields</small>
    </section>
                                                            }
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
@section javascriptsection{
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap.min.js"></script>
    <link href="https://code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            if (document.URL.indexOf("ID") != -1) {
                $("#DateWEF").attr('disabled','disabled')

                $("#DateInception").change(function () {
                    $("#Pincode").val("");
                    $("#Address").val("");
                    $("#AreaName").val("");
                    $("#ZoneName").val("");
                    $("#CityName").val("");
                    $("#StateName").val("");
                    $("#ContactPerson").val("");
                    $("#MobileNo").val("");
                });                
            }
            $("#BranchType").change(function () {
                if ($("#BranchType").val() == 2) {
                    $("#RentPeriodAgreed").hide();
                    $("#lblRent").hide();
                }
                else {
                    $("#RentPeriodAgreed").show();
                    $("#lblRent").show();
                }
            });

            $("#DateInception").datepicker({ dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true });
            $("#RentPeriodAgreed").datepicker({ dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true });
            $("#DateWEF").datepicker({ dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true });

            $('#InTime').timepicker({
                timeFormat: 'h:mm p',
                interval: 60,
                minTime: '10',
                maxTime: '9:00pm',
                // defaultTime: '10',
                startTime: '10:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });

            $('#OutTime').timepicker({
                timeFormat: 'h:mm p',
                interval: 60,
                minTime: '10',
                maxTime: '9:00pm',
                // defaultTime: '10',
                startTime: '10:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });

            $("#BranchName").on('input', function () {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("doesBranchNameExist", "Branch")',
                    data: '{BranchName: "' + $("#BranchName").val() + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result == "") {
                            $("#CustomErr").empty();
                            $("#btn_save").removeAttr('disabled')
                        }
                        else {
                            $("#CustomErr").text(result);
                            $("#btn_save").attr('disabled', true)
                            return false;
                        }
                    },
                    error: function (xhr, status, error) {
                        //alert(error);
                    }
                });
            });
            //}

            //Dropdownlist Selectedchange event
            $("#Pincode").change(function () {
                $("#AreaName").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetPincodeDetails")', // we are calling json method
                    dataType: 'json',
                    data: { id: $("#Pincode").val() },
                    // here we are get value of selected country and passing same value
                    //as inputto json method GetStates.
                    success: function (country) {
                        $("#AreaName").val(country.AreaName);
                        $("#ZoneName").val(country.ZoneName);
                        $("#CityName").val(country.CityName);
                        $("#StateName").val(country.StateName);
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            })
        });

        function ShowEditTableList() {
            $('#divviewfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetBranchTable", "Branch")',
                dataType: "html",
                data: { Operation: "Edit" },
                success: function (data) {
                    $('#diveditfilldata').empty();
                    $('#diveditfilldata').html(data);
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        function ShowViewTableList() {
            $('#diveditfilldata').empty();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetBranchTable", "Branch")',
                dataType: "html",
                data: { Operation: "View" },
                success: function (data) {
                    $('#divviewfilldata').empty();
                    $('#divviewfilldata').html(data);
                    $('#example').dataTable();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        }

        var urlRedirect = '@Html.Raw(@Url.Action("Branch", "Branch"))';
        function OnSuccess(response) {

            $("#saveModal").modal('show');
            $(document).click(function () {
                window.location.href = urlRedirect;
            });
        }

        function OnFailure(response) {
            alert("Error occured.");
        }

        $(function () {
            var url = '@Html.Raw(@Url.Action("Delete", "Branch"))';
            $("#btnDelete").click(function () {
                $("#deleteModal").modal('show');
            });
            $("#btnDeleteConfirm").click(function () {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: '{id: "' + $("#ItemID").val() + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data != "") {
                            $("#CustomErr").text(data);
                            return false;
                        }
                        else {
                            $("#CustomErr").empty();
                            $("#DeleteSuccessModal").modal('show');

                            $(document).click(function () {
                                window.location.href = urlRedirect;
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            });
        });
    </script>
}

